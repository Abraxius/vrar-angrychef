//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""951901ac-5c24-4d0e-9b2b-57c0febdb7d3"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""e2fed270-d6f2-442b-a7fb-28eddaa3487e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LoadEndScene"",
                    ""type"": ""Button"",
                    ""id"": ""e56d6504-26b6-468d-bd3d-05a4fcb98fe2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Motherlode"",
                    ""type"": ""Button"",
                    ""id"": ""4740b498-0c9d-4ba0-907c-1869b236a3c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mama"",
                    ""type"": ""Button"",
                    ""id"": ""ddda7f9f-0cd4-44fb-a6b3-7210e564292d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CheatSystem"",
                    ""type"": ""Button"",
                    ""id"": ""c09b31be-8c89-4164-afd5-22c3389dfc7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HandMenuOpen"",
                    ""type"": ""Button"",
                    ""id"": ""f4f6a27e-d2cb-4d5d-ab36-910650db337c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b4fa1030-4bdf-4a50-b299-e36f6c8e8fd4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""597db22d-2507-43d2-a96a-423190d8bb3a"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LoadEndScene"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38a7afbd-6ecd-45ca-ab06-e7a07ba71b8c"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motherlode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2719fd38-6405-4eee-8c4e-68c8d156b64b"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mama"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c01eeb6-311a-4f32-bd1f-43dff2195d6c"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CheatSystem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1111c270-7d6d-4355-aaaf-21b14396e45e"",
                    ""path"": ""<XRController>{LeftHand}/{MenuButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandMenuOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_LoadEndScene = m_Player.FindAction("LoadEndScene", throwIfNotFound: true);
        m_Player_Motherlode = m_Player.FindAction("Motherlode", throwIfNotFound: true);
        m_Player_Mama = m_Player.FindAction("Mama", throwIfNotFound: true);
        m_Player_CheatSystem = m_Player.FindAction("CheatSystem", throwIfNotFound: true);
        m_Player_HandMenuOpen = m_Player.FindAction("HandMenuOpen", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_LoadEndScene;
    private readonly InputAction m_Player_Motherlode;
    private readonly InputAction m_Player_Mama;
    private readonly InputAction m_Player_CheatSystem;
    private readonly InputAction m_Player_HandMenuOpen;
    public struct PlayerActions
    {
        private @GameInput m_Wrapper;
        public PlayerActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @LoadEndScene => m_Wrapper.m_Player_LoadEndScene;
        public InputAction @Motherlode => m_Wrapper.m_Player_Motherlode;
        public InputAction @Mama => m_Wrapper.m_Player_Mama;
        public InputAction @CheatSystem => m_Wrapper.m_Player_CheatSystem;
        public InputAction @HandMenuOpen => m_Wrapper.m_Player_HandMenuOpen;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @LoadEndScene.started += instance.OnLoadEndScene;
            @LoadEndScene.performed += instance.OnLoadEndScene;
            @LoadEndScene.canceled += instance.OnLoadEndScene;
            @Motherlode.started += instance.OnMotherlode;
            @Motherlode.performed += instance.OnMotherlode;
            @Motherlode.canceled += instance.OnMotherlode;
            @Mama.started += instance.OnMama;
            @Mama.performed += instance.OnMama;
            @Mama.canceled += instance.OnMama;
            @CheatSystem.started += instance.OnCheatSystem;
            @CheatSystem.performed += instance.OnCheatSystem;
            @CheatSystem.canceled += instance.OnCheatSystem;
            @HandMenuOpen.started += instance.OnHandMenuOpen;
            @HandMenuOpen.performed += instance.OnHandMenuOpen;
            @HandMenuOpen.canceled += instance.OnHandMenuOpen;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @LoadEndScene.started -= instance.OnLoadEndScene;
            @LoadEndScene.performed -= instance.OnLoadEndScene;
            @LoadEndScene.canceled -= instance.OnLoadEndScene;
            @Motherlode.started -= instance.OnMotherlode;
            @Motherlode.performed -= instance.OnMotherlode;
            @Motherlode.canceled -= instance.OnMotherlode;
            @Mama.started -= instance.OnMama;
            @Mama.performed -= instance.OnMama;
            @Mama.canceled -= instance.OnMama;
            @CheatSystem.started -= instance.OnCheatSystem;
            @CheatSystem.performed -= instance.OnCheatSystem;
            @CheatSystem.canceled -= instance.OnCheatSystem;
            @HandMenuOpen.started -= instance.OnHandMenuOpen;
            @HandMenuOpen.performed -= instance.OnHandMenuOpen;
            @HandMenuOpen.canceled -= instance.OnHandMenuOpen;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnLoadEndScene(InputAction.CallbackContext context);
        void OnMotherlode(InputAction.CallbackContext context);
        void OnMama(InputAction.CallbackContext context);
        void OnCheatSystem(InputAction.CallbackContext context);
        void OnHandMenuOpen(InputAction.CallbackContext context);
    }
}
